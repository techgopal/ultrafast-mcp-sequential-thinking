name: Docker Release

on:
  push:
    branches: [master, main]

jobs:
  docker-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
      
      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Ensure Cargo.lock exists
        run: |
          if [ ! -f Cargo.lock ]; then
            echo "Cargo.lock not found, generating..."
            cargo generate-lockfile
          else
            echo "Cargo.lock found, verifying..."
            ls -la Cargo.lock
          fi
      
      - name: Extract git commit SHA
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Extract version from Cargo.toml
        id: version
        run: |
          version=$(grep '^version' Cargo.toml | head -1 | cut -d '"' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT
        shell: bash
      
      - name: Fail if version is empty
        run: |
          if [ -z "${{ steps.version.outputs.version }}" ]; then
            echo "Version is empty! Check Cargo.toml."
            exit 1
          fi
        shell: bash
      
      - name: Build and push multi-platform Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ultrafast-mcp-sequential-thinking:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ultrafast-mcp-sequential-thinking:${{ steps.vars.outputs.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/ultrafast-mcp-sequential-thinking:${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false 